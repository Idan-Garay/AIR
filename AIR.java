/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package text;

import java.awt.Color;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.*;

/**
 *
 * @author idan
 */
public class AIR extends javax.swing.JFrame {
    private AIR_Text at;
    
    /**
     * Creates new form TextGUI
     */
    public AIR() {
        initComponents();
        this.setVisible(true);
        TextPane.setContentType("text/rtf");
        SimpleAttributeSet a = new SimpleAttributeSet();
        StyleConstants.setFontFamily(a, "Arial");
        SimpleAttributeSet b = new SimpleAttributeSet();
        StyleConstants.setFontSize(b, 13);
        a.addAttributes(b);
        TextPane.setCharacterAttributes(a, false);
        
        TextPane.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                at.getFile().setChanged(true);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                at.getFile().setChanged(true);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                at.getFile().setChanged(true);
            }
        });
    }
    
    public AIR(AIR_Text at) {
        this.at = at;
        initComponents();
        this.setVisible(true);
        TextPane.setContentType("text/rtf");
        SimpleAttributeSet a = new SimpleAttributeSet();
        StyleConstants.setFontFamily(a, "Arial");
        SimpleAttributeSet b = new SimpleAttributeSet();
        StyleConstants.setFontSize(b, 13);
        a.addAttributes(b);
        TextPane.setCharacterAttributes(a, false);
        
        TextPane.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                at.getFile().setChanged(true);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                at.getFile().setChanged(true);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                at.getFile().setChanged(true);
            }
        });
    }
   
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        TextPane = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        FileNew = new javax.swing.JMenuItem();
        FileOpen = new javax.swing.JMenuItem();
        FileSave = new javax.swing.JMenuItem();
        FileSaveAs = new javax.swing.JMenuItem();
        FileExit = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        cutBtn = new javax.swing.JMenuItem();
        copyBtn = new javax.swing.JMenuItem();
        pasteBtn = new javax.swing.JMenuItem();
        redoBtn = new javax.swing.JMenuItem();
        undoBtn = new javax.swing.JMenuItem();
        findBtn = new javax.swing.JMenuItem();
        FormatMenu = new javax.swing.JMenu();
        FormatFamily = new javax.swing.JMenu();
        FamilyArial = new javax.swing.JMenuItem();
        FamilyTNR = new javax.swing.JMenuItem();
        FamilyCR = new javax.swing.JMenuItem();
        FormatSize = new javax.swing.JMenu();
        small = new javax.swing.JMenuItem();
        medium = new javax.swing.JMenuItem();
        large = new javax.swing.JMenuItem();
        FormatAlign = new javax.swing.JMenu();
        alignLeft = new javax.swing.JMenuItem();
        alignCenter = new javax.swing.JMenuItem();
        alignRight = new javax.swing.JMenuItem();
        FormatColor = new javax.swing.JMenu();
        ColorBlue = new javax.swing.JMenuItem();
        ColorRed = new javax.swing.JMenuItem();
        ColorBlack = new javax.swing.JMenuItem();
        FormatStyle = new javax.swing.JMenu();
        StyleBold = new javax.swing.JMenuItem();
        StyleItalicize = new javax.swing.JMenuItem();
        StyleUnderline = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Text Editor");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane2.setViewportView(TextPane);

        FileMenu.setText("File");

        FileNew.setText("New File");
        FileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileNewActionPerformed(evt);
            }
        });
        FileMenu.add(FileNew);

        FileOpen.setText("Open");
        FileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileOpenActionPerformed(evt);
            }
        });
        FileMenu.add(FileOpen);

        FileSave.setText("Save");
        FileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSaveActionPerformed(evt);
            }
        });
        FileMenu.add(FileSave);

        FileSaveAs.setText("Save as");
        FileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSaveAsActionPerformed(evt);
            }
        });
        FileMenu.add(FileSaveAs);

        FileExit.setText("Exit");
        FileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileExitActionPerformed(evt);
            }
        });
        FileMenu.add(FileExit);

        jMenuBar1.add(FileMenu);

        EditMenu.setText("Edit");

        cutBtn.setText("Cut");
        cutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutBtnActionPerformed(evt);
            }
        });
        EditMenu.add(cutBtn);

        copyBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copyBtn.setText("Copy");
        copyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyBtnActionPerformed(evt);
            }
        });
        EditMenu.add(copyBtn);

        pasteBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        pasteBtn.setText("Paste");
        pasteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteBtnActionPerformed(evt);
            }
        });
        EditMenu.add(pasteBtn);

        redoBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        redoBtn.setText("Redo");
        redoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoBtnActionPerformed(evt);
            }
        });
        EditMenu.add(redoBtn);

        undoBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        undoBtn.setText("Undo");
        undoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoBtnActionPerformed(evt);
            }
        });
        EditMenu.add(undoBtn);

        findBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        findBtn.setText("Find");
        findBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBtnActionPerformed(evt);
            }
        });
        EditMenu.add(findBtn);

        jMenuBar1.add(EditMenu);

        FormatMenu.setText("Format");

        FormatFamily.setText("Family");

        FamilyArial.setText("Arial");
        FamilyArial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FamilyArialActionPerformed(evt);
            }
        });
        FormatFamily.add(FamilyArial);

        FamilyTNR.setText("Times New Roman");
        FamilyTNR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FamilyTNRActionPerformed(evt);
            }
        });
        FormatFamily.add(FamilyTNR);

        FamilyCR.setText("Century Gothic");
        FamilyCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FamilyCRActionPerformed(evt);
            }
        });
        FormatFamily.add(FamilyCR);

        FormatMenu.add(FormatFamily);

        FormatSize.setText("Size");

        small.setText("small");
        small.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallActionPerformed(evt);
            }
        });
        FormatSize.add(small);

        medium.setText("medium");
        medium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumActionPerformed(evt);
            }
        });
        FormatSize.add(medium);

        large.setText("large");
        large.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                largeActionPerformed(evt);
            }
        });
        FormatSize.add(large);

        FormatMenu.add(FormatSize);

        FormatAlign.setText("Align");

        alignLeft.setText("left");
        alignLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignLeftActionPerformed(evt);
            }
        });
        FormatAlign.add(alignLeft);

        alignCenter.setText("center");
        alignCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignCenterActionPerformed(evt);
            }
        });
        FormatAlign.add(alignCenter);

        alignRight.setText("right");
        alignRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignRightActionPerformed(evt);
            }
        });
        FormatAlign.add(alignRight);

        FormatMenu.add(FormatAlign);

        FormatColor.setText("Color");

        ColorBlue.setText("Blue");
        ColorBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorBlueActionPerformed(evt);
            }
        });
        FormatColor.add(ColorBlue);

        ColorRed.setText("Red");
        ColorRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorRedActionPerformed(evt);
            }
        });
        FormatColor.add(ColorRed);

        ColorBlack.setText("Black");
        ColorBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorBlackActionPerformed(evt);
            }
        });
        FormatColor.add(ColorBlack);

        FormatMenu.add(FormatColor);

        FormatStyle.setText("Style");

        StyleBold.setText("Bold");
        StyleBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StyleBoldActionPerformed(evt);
            }
        });
        FormatStyle.add(StyleBold);

        StyleItalicize.setText("Italicize");
        StyleItalicize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StyleItalicizeActionPerformed(evt);
            }
        });
        FormatStyle.add(StyleItalicize);

        StyleUnderline.setText("Underline");
        StyleUnderline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StyleUnderlineActionPerformed(evt);
            }
        });
        FormatStyle.add(StyleUnderline);

        FormatMenu.add(FormatStyle);

        jMenuBar1.add(FormatMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutBtnActionPerformed
        at.getEdit().cut(this);        
    }//GEN-LAST:event_cutBtnActionPerformed

    private void redoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoBtnActionPerformed
        at.getEdit().redo(this);
    }//GEN-LAST:event_redoBtnActionPerformed

    private void FileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileOpenActionPerformed
        at.getFile().open(this);
    }//GEN-LAST:event_FileOpenActionPerformed

    private void FileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSaveActionPerformed
        at.getFile().save(this);
    }//GEN-LAST:event_FileSaveActionPerformed

    private void copyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyBtnActionPerformed
        at.getEdit().copy(this);
    }//GEN-LAST:event_copyBtnActionPerformed

    private void pasteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteBtnActionPerformed
        at.getEdit().paste(this);
    }//GEN-LAST:event_pasteBtnActionPerformed

    private void undoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoBtnActionPerformed
        at.getEdit().undo(this);
    }//GEN-LAST:event_undoBtnActionPerformed

    private void findBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBtnActionPerformed
        SearchGUI sg = new SearchGUI(this.getTextPane(), new AIR_Search(Color.yellow, Color.orange));
        sg.setVisible(true);
        sg.setAlwaysOnTop(true);
    }//GEN-LAST:event_findBtnActionPerformed

    private void FamilyTNRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FamilyTNRActionPerformed
        at.getFormat().setFormat("Times New Roman", TextPane, 1);
    }//GEN-LAST:event_FamilyTNRActionPerformed

    private void FamilyArialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FamilyArialActionPerformed
        at.getFormat().setFormat("Arial", TextPane, 1);
    }//GEN-LAST:event_FamilyArialActionPerformed

    private void FamilyCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FamilyCRActionPerformed
        at.getFormat().setFormat("Century Gothic", TextPane, 1);
    }//GEN-LAST:event_FamilyCRActionPerformed

    private void smallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallActionPerformed
        at.getFormat().setFormat(13, TextPane);
    }//GEN-LAST:event_smallActionPerformed

    private void mediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumActionPerformed
        at.getFormat().setFormat(26, TextPane);
    }//GEN-LAST:event_mediumActionPerformed

    private void largeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_largeActionPerformed
        at.getFormat().setFormat(39, TextPane);
    }//GEN-LAST:event_largeActionPerformed

    private void alignLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignLeftActionPerformed
        at.getFormat().setFormat("left", TextPane, 0);
    }//GEN-LAST:event_alignLeftActionPerformed

    private void alignCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignCenterActionPerformed
       at.getFormat().setFormat("center", TextPane, 0);
    }//GEN-LAST:event_alignCenterActionPerformed

    private void ColorBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorBlueActionPerformed
        at.getFormat().setFormat(Color.blue, TextPane);
    }//GEN-LAST:event_ColorBlueActionPerformed

    private void ColorRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorRedActionPerformed
//        at.getFormat().getFc().setColor("red");
        at.getFormat().setFormat(Color.red, TextPane);
    }//GEN-LAST:event_ColorRedActionPerformed

    private void ColorBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorBlackActionPerformed
        at.getFormat().setFormat(Color.black, TextPane);
    }//GEN-LAST:event_ColorBlackActionPerformed

    private void alignRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignRightActionPerformed
        at.getFormat().setFormat("right", TextPane, 0);
    }//GEN-LAST:event_alignRightActionPerformed

    private void StyleBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StyleBoldActionPerformed
        at.getFormat().setFormat("bold", TextPane, 1);
    }//GEN-LAST:event_StyleBoldActionPerformed

    private void StyleItalicizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StyleItalicizeActionPerformed
        at.getFormat().setFormat("italicize", TextPane, 1);
    }//GEN-LAST:event_StyleItalicizeActionPerformed

    private void StyleUnderlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StyleUnderlineActionPerformed
        at.getFormat().setFormat("underline", TextPane, 1);
    }//GEN-LAST:event_StyleUnderlineActionPerformed

    private void FileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSaveAsActionPerformed
        at.getFile().saveAs(this);
    }//GEN-LAST:event_FileSaveAsActionPerformed

    private void FileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileNewActionPerformed
        at.getFile().newFile(this);
    }//GEN-LAST:event_FileNewActionPerformed

    private void FileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileExitActionPerformed
        at.getFile().exit(this);
    }//GEN-LAST:event_FileExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        at.getFile().exit(this);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        AIR gui = new AIR();
        AIR_Text at = new AIR_Text(new AIR_Edit(gui), new AIR_Format(gui.getTextPane()), new AIR_File());
        gui.setAt(at);
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                gui.setVisible(true);
            }
        });
    }
    
    public javax.swing.JTextPane getTextPane() {
        return this.TextPane;
    }

    public AIR_Text getAt() {
        return at;
    }

    public void setAt(AIR_Text at) {
        this.at = at;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ColorBlack;
    private javax.swing.JMenuItem ColorBlue;
    private javax.swing.JMenuItem ColorRed;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenuItem FamilyArial;
    private javax.swing.JMenuItem FamilyCR;
    private javax.swing.JMenuItem FamilyTNR;
    private javax.swing.JMenuItem FileExit;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem FileNew;
    private javax.swing.JMenuItem FileOpen;
    private javax.swing.JMenuItem FileSave;
    private javax.swing.JMenuItem FileSaveAs;
    private javax.swing.JMenu FormatAlign;
    private javax.swing.JMenu FormatColor;
    private javax.swing.JMenu FormatFamily;
    private javax.swing.JMenu FormatMenu;
    private javax.swing.JMenu FormatSize;
    private javax.swing.JMenu FormatStyle;
    private javax.swing.JMenuItem StyleBold;
    private javax.swing.JMenuItem StyleItalicize;
    private javax.swing.JMenuItem StyleUnderline;
    private javax.swing.JTextPane TextPane;
    private javax.swing.JMenuItem alignCenter;
    private javax.swing.JMenuItem alignLeft;
    private javax.swing.JMenuItem alignRight;
    private javax.swing.JMenuItem copyBtn;
    private javax.swing.JMenuItem cutBtn;
    private javax.swing.JMenuItem findBtn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem large;
    private javax.swing.JMenuItem medium;
    private javax.swing.JMenuItem pasteBtn;
    private javax.swing.JMenuItem redoBtn;
    private javax.swing.JMenuItem small;
    private javax.swing.JMenuItem undoBtn;
    // End of variables declaration//GEN-END:variables
}
